@startuml "Component Diagram voor de Backend container van Triptop systeem"

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title "Component Diagram voor de Backend container van Triptop systeem"

' Only include actors, systems or containers that interact with components in scope
Person(user, "Reiziger", "Een persoon die een reis wil plannen")
Container(frontend, "Frontend", "React", "Gebruikersinterface voor reisplanning")
System_Ext(tripAdvisorApi, "TripAdvisor API", "Externe API voor activiteiten en excursies")
System_Ext(bookingApi, "Booking.com API", "Externe API voor accommodaties")
System_Ext(googleMapsApi, "Google Maps API", "Externe API voor kaarten en routes")

Container_Boundary(backend, "Backend") {
    ' Primary ports (linkerkant in hexagonal architecture)
    Component(tripController, "TripController", "Spring RestController", "Behandelt HTTP-verzoeken voor reisplanning en biedt REST-endpoints")
    
    ' Application core (midden in hexagonal architecture)
    Component(activityService, "ActivityService", "Spring Service", "Beheert activiteiten en coördineert tussen verschillende providers")
    Component(providerRegistry, "ProviderRegistry", "Spring Bean", "Houdt een register bij van beschikbare activiteitenproviders")
    
    ' Secondary ports (rechterkant in hexagonal architecture)
    Component(activityProviderPort, "ActivityProviderPort", "Java Interface", "Definieert interface voor alle activiteitenproviders")
    Component(tripAdvisorAdapter, "TripAdvisorAdapter", "Java Adapter", "Communiceert met TripAdvisor API voor activiteiten")
    Component(bookingAdapter, "BookingAdapter", "Java Adapter", "Communiceert met Booking.com API voor accommodaties")
    Component(googleMapsAdapter, "GoogleMapsAdapter", "Java Adapter", "Communiceert met Google Maps API voor locaties")
}

' Relationships with proper descriptions
Rel(user, frontend, "Gebruikt")
Rel(frontend, tripController, "Vraagt reisopties aan", "HTTP/JSON")
Rel(tripController, activityService, "Delegeert activiteiten-verzoeken naar", "Methode-aanroep")
Rel(activityService, providerRegistry, "Zoekt beschikbare providers via", "Methode-aanroep")
Rel(activityService, activityProviderPort, "Gebruikt providers via", "Interface")

' Adapter relationships
Rel_Right(activityProviderPort, tripAdvisorAdapter, "Wordt geïmplementeerd door")
Rel_Right(activityProviderPort, bookingAdapter, "Wordt geïmplementeerd door")
Rel_Right(activityProviderPort, googleMapsAdapter, "Wordt geïmplementeerd door")

' External API calls
Rel(tripAdvisorAdapter, tripAdvisorApi, "Haalt activiteitendata op van", "HTTP/JSON")
Rel(bookingAdapter, bookingApi, "Haalt accommodatiedata op van", "HTTP/JSON")
Rel(googleMapsAdapter, googleMapsApi, "Haalt locatie- en routedata op van", "HTTP/JSON")

' Extension mechanism
Rel_U(providerRegistry, activityProviderPort, "Beheert implementaties van", "Reflectie")

' Note explaining the extension point
note right of activityProviderPort
  Uitbreidingspunt: Nieuwe providers kunnen worden 
  toegevoegd zonder bestaande code te wijzigen
end note

@enduml 