@startuml Component diagram voor de backend container van Triptop systeem
!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>
!include <C4/C4_Component>

LAYOUT_WITH_LEGEND()

title Component diagram voor de backend container van Triptop systeem

Container(website, "Frontend", "React", "Biedt een gebruikersinterface voor klanten")

System_Boundary(triptop, "Backend Triptop Container") {
    ' Services
    Component(authS, "Authorisation Service Facade", "Java Springboot, Service", "De service die authenticatie afhandelt en gebruikersgegevens in de database opslaat")
    Component(actFact, "Activity Factory", "Java Springboot, Service", "Factory voor het aanmaken van verschillende activiteiten")
    Component(hotelFact, "Hotel Adapter", "Java Springboot, Service", "Adapter voor het ophalen van hotel data.")

    ' Controllers
    Component(authC, "Authorisation Controller", "Java Springboot, Controller", "De controller die zorgt voor afhandelen van authenticatie verzoeken")
    Component(hotelC, "Hotel Controller", "Java Springboot, Controller", "De controller die hotels ophaalt via verschillende providers")
    Component(tripAdvC, "TripAdvisor Controller", "Java Springboot, Controller", "De controller die zorgt voor afhandelen van activiteiten via TripAdvisor API")
}

' Database
ContainerDb(database, "Database", "JDBC", "Slaat reisgegevens en boekingen op")

' External Systems
System_Ext(bookingApi, "Booking.com API", "Verblijfsaccommodaties via Booking.com")
System_Ext(tripAdvisorApi, "TripAdvisor API", "Toont reviews van boekingen")
System_Ext(identityProviderApi, "Identity Provider API", "Authenticatie en autorisatie")

' Relationships - Controllers to Services
Rel(authC, authS, "gebruikt")
Rel(hotelC, hotelFact, "gebruikt")
Rel(tripAdvC, actFact, "gebruikt voor aanmaken activiteiten")
Rel(actFact, tripAdvisorApi, "gebruikt voor aanmaken activiteiten", "HTTP/JSON")

Rel(hotelFact, bookingApi, "haalt hotel data op", "HTTP/JSON")
Rel(hotelFact, tripAdvisorApi, "haalt hotel data op", "HTTP/JSON")

Rel(authS, identityProviderApi, "authenticeert gebruikers", "HTTP/JSON")

' Database relationships
Rel(authS, database, "slaat gebruikersgegevens op", "JDBC")

' Frontend to Backend relationship
Rel(website, authC, "authenticatie verzoeken", "HTTP/JSON")
Rel(website, hotelC, "hotel verzoeken", "HTTP/JSON")
Rel(website, tripAdvC, "activiteiten verzoeken", "HTTP/JSON")

@enduml